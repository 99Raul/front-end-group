{"version":3,"sources":["config.js","components/CodeList/codeList.js","components/Home/Home.js","components/CodeForm/codeForm.js","components/CodeCreate/codeCreate.js","components/Footer/Footer.js","components/Searchbar/Searchbar.js","components/Navbar/Navbar.js","components/CodeInfo/codeInfo.js","components/CodeEdit/codeEdit.js","components/Signup/Signup.js","components/Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["APIURL","CodeList","props","useState","codes","setCode","error","setError","searchString","setSearchString","useEffect","fetch","then","response","json","data","catch","className","map","code","to","_id","key","title","src","img","alt","Home","authToken","console","log","codeForm","encType","onSubmit","handleSubmit","htmlFor","type","placeholder","value","onChange","handleChange","required","id","name","rows","body","description","CreateCode","newCodeId","setNewCodeId","event","persist","target","preventDefault","formData","FormData","method","headers","Authorization","token","useStyles","makeStyles","root","minWidth","maxWidth","fill","fontSize","Footer","classes","BottomNavigation","width","style","background","BottomNavigationAction","padding","icon","Business","Mail","GitHub","SearchBar","history","useHistory","push","theme","menuSliderContainer","height","listTextColor","color","menuItems","listIcon","listText","listPath","People","Navbar","slider","left","state","setState","toggleSlider","open","Box","component","AppBar","position","Toolbar","IconButton","onClick","Menu","Typography","variant","anchor","onClose","Divider","List","isItem","ListItem","button","Link","ListItemIcon","ListItemText","primary","CodeInfo","deleted","setDeleted","returnCode","setReturn","codeId","text","language","atomOneDark","wrapLines","CodeEdit","newCode","setNewCode","JSON","stringify","emailRegex","RegExp","Signup","e","username","userName","email","password","createdUser","formErrors","length","test","this","noValidate","Component","Login","setAuthToken","user","setUser","login","setLogin","failLogin","setFailLogin","App","path","render","exact","routerProps","match","params","Boolean","window","location","hostname","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d840bdc7.chunk.js","sourcesContent":["export const APIURL = 'https://codesharebackend.herokuapp.com/';\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { APIURL } from '../../config';\nimport './codeList.css';\n\nfunction CodeList(props) {\n\tconst [codes, setCode] = useState([]);\n\tconst [filterCodes, setFilterCodes] = useState(null);\n\tconst [error, setError] = useState(false);\n\tconst { searchString, setSearchString } = props;\n\n\tuseEffect(() => {\n\t\tfetch(APIURL)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCode(data);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tsetError(true);\n\t\t\t});\n\t}, []);\n\n\tif (error) {\n\t\treturn <div>There was an error retrieving the code</div>;\n\t}\n\n\treturn (\n\t\t<div className='box'>\n\t\t\t{codes.map((code) => (\n\t\t\t\t<Link to={`/code/${code._id}`} key={code._id}>\n\t\t\t\t\t<div className='code-card'>\n\t\t\t\t\t\t<h2>{code.title}</h2>\n\t\t\t\t\t\t<img className='code-card-img' src={code.img} alt={code.title} />\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default CodeList;\n","import React, { useState } from 'react';\nimport CodeList from '../CodeList/codeList';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\nfunction Home(props) {\n\tconst { searchString, setSearchString, authToken } = props;\n\tconsole.log(authToken);\n\n\treturn (\n\t\t<>\n\t\t\t<div className='link-container'>\n\n\t\t\t{authToken === null && <div className='link'>\n\t\t\t\t<Link to='/signup'>Sign Up</Link>\n\t\t\t</div>}\n\t\t\t{authToken !== null && <div className='link'>\n\t\t\t\t<Link to='/create'>Create New Code</Link>\n\t\t\t</div>}\n\t\t\t{authToken === null && <div className='link'>\n\t\t\t\t<Link to='/login'>Login</Link>\n\t\t\t</div>}\n\t\t\t</div>\n\t\t\t<h1>Home Page</h1>\n\t\t\t<CodeList searchString={searchString} setSearchString={setSearchString} />\n\t\t</>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\nimport \"./codeForm.css\";\nfunction codeForm(props) {\n\treturn (\n\t\t<form\n\t\t\tclassName='code-form'\n\t\t\tencType='multipart/form-data'\n\t\t\tonSubmit={props.handleSubmit}>\n\t\t\t<label className='label' htmlFor='title'>\n\t\t\t\tTitle\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName='title-input'\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Code Title'\n\t\t\t\tvalue={props.code.title}\n\t\t\t\tonChange={props.handleChange}\n\t\t\t\trequired\n\t\t\t\tid='title'\n\t\t\t\tname='title'\n\t\t\t/>\n\n\t\t\t<label className='label' htmlFor='body'>\n\t\t\t\tCode\n\t\t\t</label>\n\t\t\t<textarea\n\t\t\t\tclassName='code-input'\n\t\t\t\trows='25'\n\t\t\t\tvalue={props.code.body}\n\t\t\t\tonChange={props.handleChange}\n\t\t\t\tplaceholder='Code'\n\t\t\t\tname='body'\n\t\t\t\tid='body'\n\t\t\t/>\n\n\t\t\t<label className='label' htmlFor='description'>\n\t\t\t\tDescription\n\t\t\t</label>\n\t\t\t<textarea\n\t\t\t\tclassName='description-input'\n\t\t\t\tvalue={props.code.description}\n\t\t\t\tonChange={props.handleChange}\n\t\t\t\tplaceholder='Code Description'\n\t\t\t\tname='description'\n\t\t\t\tid='description'\n\t\t\t/>\n\n\t\t\t<label className='label' htmlFor='image'>\n\t\t\t\tImage\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName='image-input'\n\t\t\t\ttype='file'\n\t\t\t\tonChange={props.handleChange}\n\t\t\t\tplaceholder='Code image'\n\t\t\t\tname='img'\n\t\t\t\tid='img'\n\t\t\t/>\n\n\t\t\t<button className='submit-button' type='submit'>\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nexport default codeForm;\n","import React, { useState } from 'react';\nimport CodeForm from '../CodeForm/codeForm';\nimport { Redirect } from 'react-router-dom';\nimport { APIURL } from '../../config';\n\nfunction CreateCode(props) {\n\tconst initialCode = {\n\t\ttitle: '',\n\t\tbody: '',\n\t\tdescription: '',\n\t\timg: '',\n\t};\n\tconst { authToken } = props;\n\tconst [code, setCode] = useState(initialCode);\n\tconst [newCodeId, setNewCodeId] = useState(null);\n\n\tconst handleChange = (event) => {\n\t\tevent.persist();\n\t\tsetCode({\n\t\t\t...code,\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t};\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst formData = new FormData(event.target)\n\t\tfetch(APIURL, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${authToken.token}`,\n\t\t\t},\n\t\t\tbody: formData,\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetNewCodeId(data._id);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t};\n\n\tif (newCodeId) {\n\t\treturn <Redirect to={`/code/${newCodeId}`} />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Create a new code snippet</h1>\n\t\t\t<CodeForm\n\t\t\t\tcode={code}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default CreateCode;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport { Business, Mail, GitHub } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\t'& .MuiBottomNavigationAction-root': {\n\t\t\tminWidth: 0,\n\t\t\tmaxWidth: 250,\n\t\t},\n\t\t'& .MuiSvgIcon-root': {\n\t\t\tfill: 'black',\n\t\t\t'&:hover': {\n\t\t\t\tfontSize: '1.8rem',\n\t\t\t},\n\t\t},\n\t},\n});\n\nfunction Footer(props) {\n\tconst classes = useStyles();\n\treturn (\n\t\t<BottomNavigation width='auto' style={{ background: '#DDDDDD' }}>\n\t\t\t<BottomNavigationAction\n\t\t\t\tclassName={classes.root}\n\t\t\t\tstyle={{ padding: 0 }}\n\t\t\t\ticon={<Business />}\n\t\t\t/>\n\t\t\t<BottomNavigationAction\n\t\t\t\tclassName={classes.root}\n\t\t\t\tstyle={{ padding: 0 }}\n\t\t\t\ticon={<Mail />}\n\t\t\t/>\n\t\t\t<BottomNavigationAction\n\t\t\t\tclassName={classes.root}\n\t\t\t\tstyle={{ padding: 0 }}\n\t\t\t\ticon={<GitHub />}\n\t\t\t/>\n\t\t</BottomNavigation>\n\t);\n}\n\nexport default Footer;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Searchbar.css';\n\nfunction SearchBar(props) {\n\tconst { searchString, setSearchString } = props;\n\n\tconst handleChange = (event) => {\n\t\tevent.persist();\n\t\tsetSearchString(event.target.value);\n\t};\n\n\tlet history = useHistory();\n\n\tconst handleSubmit = (event) => {\n\t\tconsole.log(history);\n\t\tevent.preventDefault();\n\t\tconsole.log(searchString);\n\t\thistory.push('/');\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className='form-horizontal'>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tname='searchString'\n\t\t\t\trequired\n\t\t\t\tplaceholder='Search'\n\t\t\t\tonChange={handleChange}\n\t\t\t\tvalue={searchString}\n\t\t\t/>\n\t\t\t<button type='submit' className='submit'>\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n}\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MobileLeftMenuSlider from '@material-ui/core/Drawer';\nimport Footer from '../Footer/Footer';\nimport { Link } from 'react-router-dom';\nimport Searchbar from '../Searchbar/Searchbar';\n\nimport {\n\tAppBar,\n\tToolbar,\n\tListItem,\n\tIconButton,\n\tListItemText,\n\tListItemIcon,\n\tDivider,\n\tList,\n\tTypography,\n\tBox,\n} from '@material-ui/core';\n\nimport { Menu, Home, People, AssignmentInd } from '@material-ui/icons';\n\n// CSS STYLES\nconst useStyles = makeStyles((theme) => ({\n\tmenuSliderContainer: {\n\t\twidth: 250,\n\t\tbackground: '#DDDDDD',\n\t\theight: '100%',\n\t},\n\tlistTextColor: {\n\t\tcolor: '#000000',\n\t},\n}));\n\nconst menuItems = [\n\t{\n\t\tlistIcon: <Home />,\n\t\tlistText: 'Home',\n\t\tlistPath: '/',\n\t},\n\t// {\n\t// \tlistIcon: <AssignmentInd />,\n\t// \tlistText: 'Sign Up',\n\t// \tlistPath: 'signup',\n\t// },\n\t{\n\t\tlistIcon: <People />,\n\t\tlistText: 'Users Followed',\n\t\tlistPath: 'users',\n\t},\n];\n\nfunction Navbar(props) {\n\tconst [state, setState] = useState({\n\t\tleft: false,\n\t});\n\tconst toggleSlider = (slider, open) => () => {\n\t\tsetState({ ...state, [slider]: open });\n\t};\n\n\tconst classes = useStyles();\n\n\tconst sideList = (slider) => (\n\t\t<Box\n\t\t\tclassName={classes.menuSliderContainer}\n\t\t\tcomponent='div'\n\t\t\tonClick={toggleSlider(slider, false)}>\n\t\t\t<Divider />\n\n\n\t\t\t<List>\n\t\t\t\t{menuItems.map((isItem, key) => (\n\t\t\t\t\t<ListItem button key={key} component={Link} to={isItem.listPath}>\n\t\t\t\t\t\t<ListItemIcon className={classes.listTextColor}>\n\t\t\t\t\t\t\t{isItem.listIcon}\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\tclassName={classes.listTextColor}\n\t\t\t\t\t\t\tprimary={isItem.listText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</Box>\n\t);\n\treturn (\n\t\t<>\n\t\t\t<Box component='nav'>\n\t\t\t\t<AppBar position='static' style={{ background: '#0074D9' }}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<IconButton onClick={toggleSlider('left', true)}>\n\t\t\t\t\t\t\t<Menu style={{ color: '#FFFFFF' }} />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Searchbar\n\t\t\t\t\t\t\tsearchString={props.searchString}\n\t\t\t\t\t\t\tsetSearchString={props.setSearchString}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Typography variant='h5' style={{ color: '#FFFFFF' }}></Typography>\n\t\t\t\t\t\t<MobileLeftMenuSlider\n\t\t\t\t\t\t\tanchor='left'\n\t\t\t\t\t\t\topen={state.left}\n\t\t\t\t\t\t\tonClose={toggleSlider('left', false)}>\n\t\t\t\t\t\t\t{sideList('left')}\n\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t</MobileLeftMenuSlider>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</Box>\n\t\t</>\n\t);\n}\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { APIURL } from '../../config';\nimport './codeInfo.css';\nimport { CodeBlock, atomOneDark } from 'react-code-blocks';\n\nfunction CodeInfo(props) {\n\tconst { authToken } = props;\n\tconst [code, setCode] = useState(null);\n\tconst [deleted, setDeleted] = useState(false);\n\tconst [returnCode, setReturn] = useState(false);\n\n\tuseEffect(() => {\n\t\tfetch(`${APIURL}show/${props.codeId}`)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetCode(data);\n\t\t\t\tsetReturn(true);\n\t\t\t});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst deleteCode = (event) => {\n\t\tfetch(`${APIURL}${props.codeId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${authToken.token}`,\n\t\t\t},\n\t\t}).then(() => {\n\t\t\tsetDeleted(true);\n\t\t});\n\t};\n\n\tif (deleted) {\n\t\treturn <Redirect to='/' />;\n\t}\n\n\tif (!returnCode) {\n\t\treturn <div>Loading...</div>;\n\t}\n\n\treturn (\n\t\t<div className='code-info-snip'>\n\t\t\t<h1>Code Snippet</h1>\n\t\t\t<h2>{code.title}</h2>\n\t\t\t<CodeBlock\n\t\t\t\ttext={code.body}\n\t\t\t\tlanguage='javascript'\n\t\t\t\ttheme={atomOneDark}\n\t\t\t\twrapLines\n\t\t\t\tclassName='hello'\n\t\t\t/>\n\t\t\t<p>{code.description}</p>\n\t\t\t<img className='code-info-image' src={code.img} alt={code.description} />\n\t\t\t<div className='button-horizontal'>\n\t\t\t\t<Link to={`${code._id}/edit`} className='button'>\n\t\t\t\t\tEdit\n\t\t\t\t</Link>\n\t\t\t\t<button className='button' onClick={deleteCode}>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default CodeInfo;\n","import React, { useState, useEffect } from 'react';\nimport CodeForm from '../CodeForm/codeForm';\nimport { Redirect } from 'react-router-dom';\nimport { APIURL } from '../../config';\n\nfunction CodeEdit(props) {\n\tconst { codeId, authToken } = props;\n\tconst [code, setCode] = useState(null);\n\tconst [newCode, setNewCode] = useState(null);\n\n\tuseEffect(() => {\n\t\tfetch(`${APIURL}show/${codeId}`)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetCode(data);\n\t\t\t});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst handleChange = (event) => {\n\t\tevent.persist();\n\t\tsetCode({\n\t\t\t...code,\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t};\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\t// const formData = new FormData(event.target);\n\t\t// if (code.img !== '') {\n\t\t// \tfetch(APIURL, {\n\t\t// \t\tmethod: 'POST',\n\t\t// \t\theaders: {\n\t\t// \t\t\tAuthorization: `Bearer ${authToken.token}`,\n\t\t// \t\t},\n\t\t// \t\tbody: formData,\n\t\t// \t})\n\t\t// \t\t.then((response) => response.json())\n\t\t// \t\t.then((data) => {\n\t\t// \t\t\tsetNewCode(data._id);\n\t\t// \t\t\tconsole.log(data);\n\t\t// \t\t})\n\t\t// \t\t.catch(console.error);\n\t\t// } else {\n\t\tconsole.log(code);\n\t\tfetch(`${APIURL}${codeId}`, {\n\t\t\tmethod: 'PUT',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\n\t\t\t\tAuthorization: `Bearer ${authToken.token}`,\n\t\t\t},\n\t\t\tbody: JSON.stringify(code),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetNewCode(data._id);\n\t\t\t})\n\t\t\t.catch(console.error);\n\t};\n\t// };\n\n\tif (newCode) {\n\t\treturn <Redirect to={`/code/${newCode}`} />;\n\t}\n\n\tif (!code) {\n\t\treturn <div>Loading...</div>;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Edit Code</h1>\n\t\t\t<CodeForm\n\t\t\t\tcode={code}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default CodeEdit;\n","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { APIURL } from '../../config';\n\nimport './Signup.css';\n//import styles from './Signup.module.css'\n\n// RegExp is a regular expression for testing the most basic email,address structure\n// string searching algorithim from codespot.org\n// to make sure you input a valid email address// or certain characters\nconst emailRegex = RegExp(\n\t/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n\t// set valid to true if everything checksout return valid\n\tlet valid = true;\n\n\t// validate form errors being empty\n\tObject.values(formErrors).forEach((val) => {\n\t\tval.length > 0 && (valid = false);\n\t});\n\n\t// validate the form was filled out\n\t// rest is iterating all the other values userName, email , password, foreach of those check if null, if null return false\n\tObject.values(rest).forEach((val) => {\n\t\tval === null && (valid = false);\n\t});\n\n\treturn valid;\n};\n\nclass Signup extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tuserName: null,\n\t\t\temail: null,\n\t\t\tpassword: null,\n\t\t\tcreatedUser: false,\n\t\t\t//hold strings for errors that pop up\n\t\t\t// this formErrors I am passing it along to form Valid function\n\t\t\tformErrors: {\n\t\t\t\tuserName: '',\n\t\t\t\temail: '',\n\t\t\t\tpassword: '',\n\t\t\t},\n\t\t};\n\t}\n\n\t// event propogation\n\t// line 54 work on later to create popUp\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tfetch(`${APIURL}users/signup`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tusername: this.state.userName,\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password,\n\t\t\t}),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tthis.setState({ createdUser: true });\n\t\t\t})\n\t\t\t.catch(console.error);\n\t};\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.createdUser) {\n\t\t\tconsole.log(this.state.createdUser);\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\te.preventDefault();\n\t\t// destructing syntax for line 64\n\t\tconst { name, value } = e.target;\n\t\tlet formErrors = { ...this.state.formErrors };\n\n\t\t// switch is just a giant else/if statement\n\t\tswitch (name) {\n\t\t\tcase 'userName':\n\t\t\t\t// check if the length of the input os more than 3 characters\n\t\t\t\tformErrors.userName =\n\t\t\t\t\tvalue.length < 3 ? 'minimum 3 characaters required' : '';\n\t\t\t\tbreak;\n\t\t\tcase 'email':\n\t\t\t\tformErrors.email = emailRegex.test(value)\n\t\t\t\t\t? ''\n\t\t\t\t\t: 'invalid email address';\n\t\t\t\tbreak;\n\t\t\tcase 'password':\n\t\t\t\tformErrors.password =\n\t\t\t\t\tvalue.length < 6 ? 'minimum 6 characaters required' : '';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\t// state updating\n\t\tthis.setState({ formErrors, [name]: value });\n\t};\n\n\trender() {\n\t\tconst { formErrors } = this.state;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.state.createdUser && <Redirect to='/login' />}\n\t\t\t\t<div className='wrapper'>\n\t\t\t\t\t<div className='form-wrapper'>\n\t\t\t\t\t\t<h1>Create Account</h1>\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<div className='userName'>\n\t\t\t\t\t\t\t\t<label htmlFor='userName'>User Name</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={formErrors.userName.length > 0 ? 'error' : null}\n\t\t\t\t\t\t\t\t\tplaceholder='User Name'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname='userName'\n\t\t\t\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{formErrors.userName.length > 0 && (\n\t\t\t\t\t\t\t\t\t// if form userName length greater than 0 return this message\n\t\t\t\t\t\t\t\t\t<span className='errorMessage'>{formErrors.userName}</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='email'>\n\t\t\t\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={formErrors.email.length > 0 ? 'error' : null}\n\t\t\t\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{formErrors.email.length > 0 && (\n\t\t\t\t\t\t\t\t\t<span className='errorMessage'>{formErrors.email}</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='password'>\n\t\t\t\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={formErrors.password.length > 0 ? 'error' : null}\n\t\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{formErrors.password.length > 0 && (\n\t\t\t\t\t\t\t\t\t<span className='errorMessage'>{formErrors.password}</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='createAccount'>\n\t\t\t\t\t\t\t\t<button type='submit'>Create Account</button>\n\t\t\t\t\t\t\t\t<Link to='/login'>Already Have an Account?</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { APIURL } from '../../config';\nimport './Login.css';\n// import styles from './Login.module.css'\n\nfunction Login(props) {\n\tconst { authToken, setAuthToken } = props;\n\tconst initialUser = {\n\t\tusername: '',\n\t\tpassword: '',\n\t};\n\tconst [user, setUser] = useState(initialUser);\n\tconst [login, setLogin] = useState(false);\n\tconst [failLogin, setFailLogin] = useState(false);\n\n\tconst handleChange = (event) => {\n\t\tevent.persist();\n\t\tsetUser({\n\t\t\t...user,\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t};\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tfetch(`${APIURL}users/signin`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json; charset=UTF-8',\n\t\t\t},\n\t\t\tbody: JSON.stringify(user),\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetAuthToken(data);\n\t\t\t\tsetLogin(true);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tsetFailLogin(true);\n\t\t\t});\n\t};\n\n\tif (login) {\n\t\treturn <Redirect to='/' />;\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className='form-container'>\n\t\t\t<h1> Please sign In</h1>\n\t\t\t<div className='form-group1'>\n\t\t\t\t<label htmlFor='username' className='label1'>\n\t\t\t\t\tUsername\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='username'\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tname='username'\n\t\t\t\t\tplaceholder='Username'\n\t\t\t\t\tvalue={user.username}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='form-group2'>\n\t\t\t\t<label htmlFor='password' className='label2'>\n\t\t\t\t\tpassword\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='password'\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tname='password'\n\t\t\t\t\tplaceholder='Enter Password'\n\t\t\t\t\tvalue={user.password}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='button-container'>\n\t\t\t\t<button type='submit' className='btn'>\n\t\t\t\t\tSign In\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t{failLogin && <p className='fail-login'>Login Failed Try Again!</p>}\n\t\t</form>\n\t);\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport Home from './components/Home/Home';\nimport CodeCreate from './components/CodeCreate/codeCreate';\nimport Navbar from './components/Navbar/Navbar';\nimport CodeInfo from './components/CodeInfo/codeInfo';\nimport CodeEdit from './components/CodeEdit/codeEdit';\nimport { Route, Switch } from 'react-router-dom';\nimport Signup from './components/Signup/Signup';\nimport Login from './components/Login/Login';\n\nfunction App() {\n\tconst [searchString, setSearchString] = useState('');\n\tconst [authToken, setAuthToken] = useState(null);\n\n\treturn (\n\t\t<div className = \"main\">\n\t\t\t<Route\n\t\t\t\tpath='*'\n\t\t\t\trender={() => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Navbar\n\t\t\t\t\t\t\tsearchString={searchString}\n\t\t\t\t\t\t\tsetSearchString={setSearchString}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Switch>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath='/'\n\t\t\t\t\trender={() => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\tsearchString={searchString}\n\t\t\t\t\t\t\t\tsetSearchString={setSearchString}\n\t\t\t\t\t\t\t\tauthToken={authToken}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath='/create'\n\t\t\t\t\trender={() => {\n\t\t\t\t\t\treturn <CodeCreate authToken={authToken} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath='/code/:id'\n\t\t\t\t\trender={(routerProps) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CodeInfo\n\t\t\t\t\t\t\t\tcodeId={routerProps.match.params.id}\n\t\t\t\t\t\t\t\tauthToken={authToken}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath='/code/:id/edit'\n\t\t\t\t\trender={(routerProps) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CodeEdit\n\t\t\t\t\t\t\t\tcodeId={routerProps.match.params.id}\n\t\t\t\t\t\t\t\tauthToken={authToken}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Route exact path='/signup' component={Signup} />\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath='/login'\n\t\t\t\t\trender={() => {\n\t\t\t\t\t\treturn <Login authToken={authToken} setAuthToken={setAuthToken} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n\t<Router basename='/front-end-group'>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}